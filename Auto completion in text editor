{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMfoaDcP2/eypqn5epySKtX",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/karth946/Auto-completion-in-text-editor-/blob/main/Copy_of_Untitled1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7dm_hYaJSJ3r"
      },
      "outputs": [],
      "source": [
        "import ipywidgets as widgets\n",
        "from IPython.display import display, HTML, clear_output\n",
        "\n",
        "# --- Display Logo with Monospace Heart Font ---\n",
        "display(HTML(\"\"\"\n",
        "<style>\n",
        "    body { background-color: white !important; }\n",
        "\n",
        "    /* Use a monospace font and add heart emojis */\n",
        "    .logo-container {\n",
        "        text-align: center;\n",
        "        padding-top: 40px;\n",
        "        background-color: white;\n",
        "        font-family: 'Courier New', monospace;\n",
        "    }\n",
        "\n",
        "    .autocomplete-logo {\n",
        "        font-size: 48px;\n",
        "        font-weight: bold;\n",
        "        margin-bottom: 10px;\n",
        "    }\n",
        "\n",
        "    .autocomplete-logo span:nth-child(1) { color: #4285F4; }  /* A */\n",
        "    .autocomplete-logo span:nth-child(2) { color: #EA4335; }  /* U */\n",
        "    .autocomplete-logo span:nth-child(3) { color: #FBBC05; }  /* T */\n",
        "    .autocomplete-logo span:nth-child(4) { color: #34A853; }  /* O */\n",
        "    .autocomplete-logo span:nth-child(5) { color: #EA4335; }  /* C */\n",
        "    .autocomplete-logo span:nth-child(6) { color: #4285F4; }  /* O */\n",
        "    .autocomplete-logo span:nth-child(7) { color: #34A853; }  /* M */\n",
        "    .autocomplete-logo span:nth-child(8) { color: #FBBC05; }  /* P */\n",
        "    .autocomplete-logo span:nth-child(9) { color: #EA4335; }  /* L */\n",
        "    .autocomplete-logo span:nth-child(10) { color: #4285F4; } /* E */\n",
        "    .autocomplete-logo span:nth-child(11) { color: #34A853; } /* T */\n",
        "    .autocomplete-logo span:nth-child(12) { color: #FBBC05; } /* I */\n",
        "    .autocomplete-logo span:nth-child(13) { color: #EA4335; } /* O */\n",
        "    .autocomplete-logo span:nth-child(14) { color: #4285F4; } /* N */\n",
        "</style>\n",
        "\n",
        "<div class=\"logo-container\">\n",
        "    <div class=\"autocomplete-logo\">\n",
        "        <span>A</span><span>U</span><span>T</span><span>O</span><span>C</span><span>O</span><span>M</span><span>P</span><span>L</span><span>E</span><span>T</span><span>I</span><span>O</span><span>N</span>\n",
        "    </div>\n",
        "    <div style=\"font-size: 24px; color:#900C3F ;\">IN TEXT EDITOR</div>\n",
        "</div>\n",
        "\"\"\"))\n",
        "\n",
        "# --- Keywords ---\n",
        "keywords = sorted([\n",
        "    \"Natural Language Processing\", \"Colab.research.google.com\", \"Google.com\", \"Gmail.com\",\n",
        "    \"Tamil Movies 2025\", \"Tamil Songs in 2025\", \"Tamil Songs in 2008\", \"Tamil Vadivel comedy\",\n",
        "    \"Tamil Gowndamani Senthil comedy\", \"Moviesda.com\", \"Tamil Latest Movie\", \"Irctc.com\",\n",
        "    \"GUVI GEEK NETWORK PRIVATE LIMITED\", \"HCLTech\", \"Naan Mudhalvan Upskilling Platform\",\n",
        "    \"IPL Today Match\", \"Naan Mudhalvan Upskilling Platform login\", \"Youtube.com\",\n",
        "    \"Java Script\", \"Java online Compiler\", \"C++\", \"Auto completion in Text Editor\",\n",
        "    \"Auto completion in Text view\"\n",
        "], key=str.lower)\n",
        "\n",
        "# --- Search Box ---\n",
        "editor = widgets.Text(\n",
        "    placeholder='Search Google or type a URL',\n",
        "    layout=widgets.Layout(width='100%', height='70px', padding='15px'),\n",
        "    style={'description_width': '0px'}\n",
        ")\n",
        "\n",
        "# --- Apply Styling ---\n",
        "display(HTML(\"\"\"\n",
        "<style>\n",
        "    .widget-text input {\n",
        "        background-color: black !important;\n",
        "        color: white !important;\n",
        "        font-size: 20px !important;\n",
        "        border-radius: 40px !important;\n",
        "        padding: 20px 30px !important;\n",
        "        border: 3px solid #dfe1e5 !important;\n",
        "    }\n",
        "</style>\n",
        "\"\"\"))\n",
        "\n",
        "# --- Search Layout ---\n",
        "search_bar = widgets.HBox([editor], layout=widgets.Layout(width='100%', padding='5px'))\n",
        "suggestions_out = widgets.Output(layout=widgets.Layout(width='100%'))\n",
        "\n",
        "search_area = widgets.VBox([search_bar, suggestions_out],\n",
        "    layout=widgets.Layout(width='70%'))\n",
        "\n",
        "# ðŸŸ¡ Move Search Box Down\n",
        "center_box = widgets.VBox([search_area],\n",
        "    layout=widgets.Layout(\n",
        "        align_items='center',\n",
        "        margin='80px 0px 0px 0px'  # top, right, bottom, left\n",
        "    )\n",
        ")\n",
        "\n",
        "# --- Suggestion Logic ---\n",
        "def update_suggestions(change):\n",
        "    typed = change['new'].strip().lower()\n",
        "    suggestions_out.clear_output()\n",
        "    if typed:\n",
        "        starts_with = []\n",
        "        contains = []\n",
        "        for kw in keywords:\n",
        "            kw_lower = kw.lower()\n",
        "            if kw_lower.startswith(typed):\n",
        "                starts_with.append(kw)\n",
        "            elif typed in kw_lower:\n",
        "                contains.append(kw)\n",
        "        matches = starts_with + contains\n",
        "        with suggestions_out:\n",
        "            for match in matches:\n",
        "                kw_lower = match.lower()\n",
        "                start = kw_lower.find(typed)\n",
        "                end = start + len(typed)\n",
        "                highlighted = (\n",
        "                    match[:start] +\n",
        "                    f\"<span style='font-weight:bold; color:black; background-color:#f1f3f4;'>{match[start:end]}</span>\" +\n",
        "                    match[end:]\n",
        "                )\n",
        "                html = f\"\"\"\n",
        "                <div style='text-align: left; padding: 6px 8px; font-size: 18px; color: #333; display: flex; align-items: center;'>\n",
        "                    <span style='margin-right: 10px;'>âž­</span>\n",
        "                    {highlighted}\n",
        "                </div>\n",
        "                \"\"\"\n",
        "                display(widgets.HTML(html))\n",
        "\n",
        "# --- Bind Input ---\n",
        "editor.observe(update_suggestions, names='value')\n",
        "\n",
        "# --- Display Everything ---\n",
        "display(center_box)"
      ]
    }
  ]
}
